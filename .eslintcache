[{"E:\\Web Development\\Amazon\\amazon-clone\\src\\index.js":"1","E:\\Web Development\\Amazon\\amazon-clone\\src\\App.js":"2","E:\\Web Development\\Amazon\\amazon-clone\\src\\reportWebVitals.js":"3","E:\\Web Development\\Amazon\\amazon-clone\\src\\Header.js":"4","E:\\Web Development\\Amazon\\amazon-clone\\src\\Home.js":"5","E:\\Web Development\\Amazon\\amazon-clone\\src\\Product.js":"6","E:\\Web Development\\Amazon\\amazon-clone\\src\\Checkout.js":"7","E:\\Web Development\\Amazon\\amazon-clone\\src\\Subtotal.js":"8","E:\\Web Development\\Amazon\\amazon-clone\\src\\StateProvider.js":"9","E:\\Web Development\\Amazon\\amazon-clone\\src\\reducer.js":"10","E:\\Web Development\\Amazon\\amazon-clone\\src\\CheckoutProduct.js":"11","E:\\Web Development\\Amazon\\amazon-clone\\src\\Login.js":"12","E:\\Web Development\\Amazon\\amazon-clone\\src\\firebase.js":"13","E:\\Web Development\\Amazon\\amazon-clone\\src\\Payment.js":"14","E:\\Web Development\\Amazon\\amazon-clone\\src\\axios.js":"15","E:\\Web Development\\Amazon\\amazon-clone\\src\\Orders.js":"16","E:\\Web Development\\Amazon\\amazon-clone\\src\\Order.js":"17"},{"size":698,"mtime":1608184259941,"results":"18","hashOfConfig":"19"},{"size":1692,"mtime":1609003272378,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2429,"mtime":1608351643006,"results":"22","hashOfConfig":"19"},{"size":2146,"mtime":1608266828169,"results":"23","hashOfConfig":"19"},{"size":1187,"mtime":1608218422161,"results":"24","hashOfConfig":"19"},{"size":1351,"mtime":1608221432955,"results":"25","hashOfConfig":"19"},{"size":1202,"mtime":1608267131908,"results":"26","hashOfConfig":"19"},{"size":370,"mtime":1608184199917,"results":"27","hashOfConfig":"19"},{"size":1371,"mtime":1608291586573,"results":"28","hashOfConfig":"19"},{"size":1265,"mtime":1608351548301,"results":"29","hashOfConfig":"19"},{"size":2136,"mtime":1608208467381,"results":"30","hashOfConfig":"19"},{"size":608,"mtime":1608204703168,"results":"31","hashOfConfig":"19"},{"size":6020,"mtime":1608352792704,"results":"32","hashOfConfig":"19"},{"size":157,"mtime":1608284583651,"results":"33","hashOfConfig":"19"},{"size":1016,"mtime":1608351261572,"results":"34","hashOfConfig":"19"},{"size":1245,"mtime":1608351218910,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1sow3ue",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\Web Development\\Amazon\\amazon-clone\\src\\index.js",[],["77","78"],"E:\\Web Development\\Amazon\\amazon-clone\\src\\App.js",["79","80"],"import './App.css';\nimport Header from './Header.js'\nimport React, { useEffect } from 'react'\nimport Home from './Home.js'\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom'\nimport Checkout from './Checkout.js'\nimport Login from './Login.js'\nimport { auth } from './firebase'\nimport { useStateValue } from './StateProvider.js';\nimport Payment from './Payment';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport Orders from './Orders.js'\n\nfunction App() {\n\n  const promise=loadStripe('pk_test_51HzcylIxlus14oJU1wz5eCcQhujSNjqpq2n0794QWI7U7gs5ak0ToprhiPzUXiWWC8Cy79YfDzx8YmNTcvNpMDai00Thc30HCH');\n  const [{},dispatch]=useStateValue();\n  useEffect(() => {\n      auth.onAuthStateChanged(authUser=>{\n        console.log(\"USER IS \", authUser);\n        if(authUser)\n        {\n            dispatch({\n              type:\"SET_USER\",\n              user:authUser,\n            })\n        }\n        else{\n          dispatch({\n            type: \"SET_USER\",\n            user: null,\n          })\n        }\n      })\n  }, [])\n\n  return (\n\n    <Router>\n    \n    <div className=\"app\">\n      \n      <Switch>\n\n      <Route path=\"/login\">\n        \n        <Login/>\n\n      </Route>\n\n      <Route path=\"/checkout\">\n        <Header/>\n        <Checkout/>\n\n      </Route>\n      <Route path=\"/payment\">\n        <Header/>\n        <Elements stripe={promise}>\n        <Payment/>\n        </Elements>\n      </Route>\n      <Route path=\"/orders\">\n        <Header/>\n        <Orders/>\n      </Route>\n      <Route path=\"/\">\n        <Header/>\n        <Home/>\n\n      </Route>\n\n      </Switch>\n        \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\Web Development\\Amazon\\amazon-clone\\src\\reportWebVitals.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Header.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Home.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Product.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Checkout.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Subtotal.js",["81"],"import React from 'react'\r\nimport './Subtotal.css'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport { useStateValue } from './StateProvider.js';\r\nimport { getBasketTotal } from './reducer.js';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Subtotal() {\r\n\r\n    const [{basket},dispatch]=useStateValue();\r\n    const history=useHistory();\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat\r\n                renderText={(value)=>(\r\n                    <>\r\n                    <p>\r\n                        Subtotal ({basket.length} items): <strong>{value}</strong>\r\n                    </p>\r\n                    <small className=\"subtotal_gift\">\r\n                        <input type=\"checkbox\"/> This order contains gift\r\n                    </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                \r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n\r\n            />\r\n            <button onClick={e=>history.push(\"/payment\")}>Proceed to checkout</button>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Web Development\\Amazon\\amazon-clone\\src\\StateProvider.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\reducer.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\CheckoutProduct.js",["82","83"],"import { Card } from '@material-ui/core';\r\nimport React from 'react'\r\nimport './CheckoutProduct.css'\r\nimport { useStateValue } from './StateProvider.js'\r\n\r\n\r\nexport default function CheckoutProduct({ id,image,title,price,rating,hideButton }) {\r\nconst [{},dispatch]=useStateValue();\r\n\r\n    const removeFromBasket=()=>{\r\n        dispatch({\r\n            type: \"REMOVE_FROM_BASKET\",\r\n            id:id,\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <Card className=\"checkoutProduct\">\r\n\r\n            <img className=\"checkoutProduct_image\" src={image}/>\r\n            \r\n            <div className=\"checkoutProduct_info\">\r\n                <div className=\"checkoutProduct_title\">{title}</div>\r\n                <div className=\"checkoutProduct_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </div>\r\n\r\n                <div className=\"checkoutProduct_rating\">\r\n                   \r\n                        {Array(rating).fill().map((_,i)=>(\"‚≠ê\"))}\r\n                    \r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from basket</button>\r\n                )}\r\n                \r\n\r\n            </div>\r\n            \r\n        </Card>\r\n    )\r\n}\r\n","E:\\Web Development\\Amazon\\amazon-clone\\src\\Login.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\firebase.js",[],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Payment.js",["84"],"import React, { useState,useEffect } from 'react'\r\nimport './Payment.css'\r\nimport { useStateValue } from './StateProvider.js';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport { getBasketTotal } from './reducer.js';\r\nimport axios from './axios';\r\nimport CheckoutProduct from './CheckoutProduct.js'\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport { db } from './firebase.js';\r\n\r\nimport { CardElement,useStripe,useElements } from '@stripe/react-stripe-js';\r\n\r\nfunction Payment() {\r\n    const history=useHistory();\r\n    const [{user,basket},dispatch]=useStateValue();\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n    const stripe=useStripe();\r\n    const elements=useElements();\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    console.log(\"Client Scret is\",clientSecret)\r\n\r\n    const handleSubmit=async (e)=>\r\n    {\r\n        e.preventDefault();\r\n        setProcessing(true);\r\n        const payload=await stripe.confirmCardPayment(clientSecret,{\r\n            payment_method:{\r\n                card: elements.getElement(CardElement),\r\n                billing_details: {\r\n                    address: {\r\n                      city: \"New York\",\r\n                      country: \"US\",\r\n                      line1: \"No1\",\r\n                      line2: \"No2\",\r\n                      postal_code: \"42424\",\r\n                      state: \"Texas\"\r\n                    },\r\n                    email: \"kale44772@gmail.com\",\r\n                    name: \"Raj Kale\",\r\n                    phone: \"8888228947\"\r\n                  },\r\n            }\r\n        }).then(({paymentIntent})=>{\r\n           \r\n            db.collection('users')\r\n              .doc(user?.uid)\r\n              .collection('orders')\r\n              .doc(paymentIntent.id)\r\n              .set({\r\n                  basket: basket,\r\n                  amount: paymentIntent.amount,\r\n                  created: paymentIntent.created\r\n              })\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type:\"EMPTY_BASKET\"\r\n            })\r\n\r\n            history.replace(\"/orders\")\r\n            // we use replace when we dont want to come back\r\n        })\r\n    }\r\n    const handleChange=e=>\r\n    {\r\n        setDisabled(e.empty);\r\n        setError(e.error?e.error.message:\"\");\r\n    }\r\n    return (\r\n        <div className=\"payment\">\r\n\r\n            <div className=\"payment_container\">\r\n                <h1>\r\n                    Checkout(\r\n                    <Link to=\"/checkout\">{basket?.length}</Link>)\r\n                </h1>\r\n\r\n                <div className=\"payment_section\">\r\n\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delievery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>Bori kh. Salwadi</p>\r\n                        <p>Junnar, Pune,Maharashtra</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Review items and delievery</h3>\r\n                    </div>\r\n                    <div className=\"payment_items\">\r\n                        {basket.map(item=>(\r\n                            <CheckoutProduct\r\n                            id={item.id}\r\n                            image={item.image}\r\n                            title={item.title}\r\n                            price={item.price}\r\n                            rating={item.rating}/>\r\n                        ))\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment_priceContainer\">\r\n                            <CurrencyFormat\r\n                                    renderText={(value)=>(\r\n                                        <h3>Order Total: {value}</h3>\r\n                                     )}\r\n                                    decimalScale={2}\r\n                                    \r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={\"$\"}\r\n\r\n                                />\r\n                                <button className=\"buy_button\" disabled={processing||disabled||succeeded}>\r\n                                   <span>{processing?<p>Processing</p>:\"Buy Now\"}</span> \r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                            {/* && means if error then only show it */}\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment;\r\n","E:\\Web Development\\Amazon\\amazon-clone\\src\\axios.js",[],["85","86"],"E:\\Web Development\\Amazon\\amazon-clone\\src\\Orders.js",["87","88"],"import React, {useState,useEffect} from 'react'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from \"./firebase\";\r\nimport Order from './Order.js'\r\nimport './Orders.css'\r\nfunction Orders() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const [orders, setOrders] = useState([]);\r\n  useEffect(() => {\r\n    if(user) {\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('orders')\r\n        .orderBy('created', 'desc')\r\n        .onSnapshot(snapshot => (\r\n            setOrders(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        ))\r\n    } else {\r\n        setOrders([])\r\n    }\r\n\r\n  }, [user])\r\n    return (\r\n        <div className=\"orders\">\r\n             <h1>Your Orders</h1>\r\n\r\n<div className='orders__order'>\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Orders\r\n","E:\\Web Development\\Amazon\\amazon-clone\\src\\Order.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":18,"column":10,"nodeType":"95","messageId":"96","endLine":18,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":36,"column":6,"nodeType":"99","endLine":36,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":10,"column":21,"nodeType":"103","messageId":"104","endLine":10,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":10},{"ruleId":"105","severity":1,"message":"106","line":21,"column":13,"nodeType":"107","endLine":21,"endColumn":65},{"ruleId":"101","severity":1,"message":"108","line":44,"column":15,"nodeType":"103","messageId":"104","endLine":44,"endColumn":22},{"ruleId":"89","replacedBy":"109"},{"ruleId":"91","replacedBy":"110"},{"ruleId":"101","severity":1,"message":"111","line":7,"column":12,"nodeType":"103","messageId":"104","endLine":7,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":7,"column":28,"nodeType":"103","messageId":"104","endLine":7,"endColumn":36},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'payload' is assigned a value but never used.",["112"],["113"],"'basket' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [dispatch]",{"range":"117","text":"118"},[1082,1084],"[dispatch]"]